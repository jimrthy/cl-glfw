;;;; This file was automatically generated by /home/james/src/lisp/cl-glfw/generators/make-bindings-from-spec.lisp

(in-package #:cl-glfw-opengl) 

;;;; arb_compute_shader

(defconstant +compute-shader-bit+ #x20) 
(defconstant +vertex-shader-bit-ext+ #x1) 
(defconstant +fragment-shader-bit-ext+ #x2) 
(defconstant +all-shader-bits-ext+ #xFFFFFFFF) 
(defconstant +vertex-attrib-array-barrier-bit-ext+ #x1) 
(defconstant +element-array-barrier-bit-ext+ #x2) 
(defconstant +uniform-barrier-bit-ext+ #x4) 
(defconstant +texture-fetch-barrier-bit-ext+ #x8) 
(defconstant +shader-image-access-barrier-bit-ext+ #x20) 
(defconstant +command-barrier-bit-ext+ #x40) 
(defconstant +pixel-buffer-barrier-bit-ext+ #x80) 
(defconstant +texture-update-barrier-bit-ext+ #x100) 
(defconstant +buffer-update-barrier-bit-ext+ #x200) 
(defconstant +framebuffer-barrier-bit-ext+ #x400) 
(defconstant +transform-feedback-barrier-bit-ext+ #x800) 
(defconstant +atomic-counter-barrier-bit-ext+ #x1000) 
(defconstant +all-barrier-bits-ext+ #xFFFFFFFF) 
(defconstant +vertex-attrib-array-barrier-bit+ #x1) 
(defconstant +element-array-barrier-bit+ #x2) 
(defconstant +uniform-barrier-bit+ #x4) 
(defconstant +texture-fetch-barrier-bit+ #x8) 
(defconstant +shader-image-access-barrier-bit+ #x20) 
(defconstant +command-barrier-bit+ #x40) 
(defconstant +pixel-buffer-barrier-bit+ #x80) 
(defconstant +texture-update-barrier-bit+ #x100) 
(defconstant +buffer-update-barrier-bit+ #x200) 
(defconstant +framebuffer-barrier-bit+ #x400) 
(defconstant +transform-feedback-barrier-bit+ #x800) 
(defconstant +atomic-counter-barrier-bit+ #x1000) 
(defconstant +all-barrier-bits+ #xFFFFFFFF) 
(defconstant +shader-storage-barrier-bit+ #x2000) 
(defconstant +layout-default-intel+ #x0) 
(defconstant +layout-linear-intel+ #x1) 
(defconstant +layout-linear-cpu-cached-intel+ #x2) 
(defconstant +max-compute-shared-memory-size+ #x8262) 
(defconstant +max-compute-uniform-components+ #x8263) 
(defconstant +max-compute-atomic-counter-buffers+ #x8264) 
(defconstant +max-compute-atomic-counters+ #x8265) 
(defconstant +max-combined-compute-uniform-components+ #x8266) 
(defconstant +compute-local-work-size+ #x8267) 
(defconstant +debug-type-marker+ #x8268) 
(defconstant +debug-type-push-group+ #x8269) 
(defconstant +debug-type-pop-group+ #x826A) 
(defconstant +debug-severity-notification+ #x826B) 
(defconstant +max-debug-group-stack-depth+ #x826C) 
(defconstant +debug-group-stack-depth+ #x826D) 
(defconstant +max-compute-local-invocations+ #x90EB) 
(defconstant +uniform-block-referenced-by-compute-shader+ #x90EC) 
(defconstant +atomic-counter-buffer-referenced-by-compute-shader+ #x90ED) 
(defconstant +dispatch-indirect-buffer+ #x90EE) 
(defconstant +dispatch-indirect-buffer-binding+ #x90EF) 
(defconstant +color-attachment-ext+ #x90F0) 
(defconstant +multiview-ext+ #x90F1) 
(defconstant +max-multiview-buffers-ext+ #x90F2) 
(defconstant +compute-shader+ #x91B9) 
(defconstant +max-compute-uniform-blocks+ #x91BB) 
(defconstant +max-compute-texture-image-units+ #x91BC) 
(defconstant +max-compute-image-uniforms+ #x91BD) 
(defconstant +max-compute-work-group-count+ #x91BE) 
(defconstant +max-compute-work-group-size+ #x91BF) 
(defconstant +shader-binary-dmp+ #x9250) 
(defconstant +gccso-shader-binary-fj+ #x9260) 
(defconstant +compute-shader+ #x91B9) 
(defconstant +max-compute-uniform-blocks+ #x91BB) 
(defconstant +max-compute-texture-image-units+ #x91BC) 
(defconstant +max-compute-image-uniforms+ #x91BD) 
(defconstant +max-compute-shared-memory-size+ #x8262) 
(defconstant +max-compute-uniform-components+ #x8263) 
(defconstant +max-compute-atomic-counter-buffers+ #x8264) 
(defconstant +max-compute-atomic-counters+ #x8265) 
(defconstant +max-combined-compute-uniform-components+ #x8266) 
(defconstant +max-compute-local-invocations+ #x90EB) 
(defconstant +max-compute-work-group-count+ #x91BE) 
(defconstant +max-compute-work-group-size+ #x91BF) 
(defconstant +compute-local-work-size+ #x8267) 
(defconstant +uniform-block-referenced-by-compute-shader+ #x90EC) 
(defconstant +atomic-counter-buffer-referenced-by-compute-shader+ #x90ED) 
(defconstant +dispatch-indirect-buffer+ #x90EE) 
(defconstant +dispatch-indirect-buffer-binding+ #x90EF) 
(defconstant +compute-shader-bit+ #x20) 
(defglextfun "DispatchComputeIndirect" dispatch-compute-indirect :return "void" :args ((:name |indirect| :type |BufferOffset| :direction :in)) :category "ARB_compute_shader" :deprecated nil :version "4.3") 
(defglextfun "DispatchCompute" dispatch-compute :return "void" :args ((:name |num_groups_x| :type |UInt32| :direction :in) (:name |num_groups_y| :type |UInt32| :direction :in) (:name |num_groups_z| :type |UInt32| :direction :in)) :category "ARB_compute_shader" :deprecated nil :version "4.3") 
(make-extension-loader |ARB_compute_shader| (("DispatchComputeIndirect" dispatch-compute-indirect :return "void" :args ((:name |indirect| :type |BufferOffset| :direction :in)) :category "ARB_compute_shader" :deprecated nil :version "4.3") ("DispatchCompute" dispatch-compute :return "void" :args ((:name |num_groups_x| :type |UInt32| :direction :in) (:name |num_groups_y| :type |UInt32| :direction :in) (:name |num_groups_z| :type |UInt32| :direction :in)) :category "ARB_compute_shader" :deprecated nil :version "4.3"))) 
